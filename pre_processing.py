import re
import autogen

llm_config = {
    "config_list": [{"model": "gpt-4o", "api_key": "sk-proj-AAAA"}],
}
self_agent_prompt = "A human admin. Interact with the planner to discuss the plan. Plan execution needs to be approved by this admin."
reviewer_agent_prompt = "You are the Reviewer Agent. Your primary task is to refine the raw response generated by previous agents based on the user's input. Ensure that the response effectively addresses the user's question. Your goal is to provide a clear, accurate, and valuable response to the user."

def post_process_text(text):
  self_agent = autogen.UserProxyAgent(
    name="self_agent",
    human_input_mode="NEVER",
    code_execution_config=False,
    system_message=self_agent_prompt,
    default_auto_reply="Reply `TERMINATE` if the task is done.",
    llm_config=llm_config
  )

  reviewer_agent = autogen.AssistantAgent(
    name="reviewer_agent",
    system_message=reviewer_agent_prompt,
    human_input_mode="NEVER",
    code_execution_config=False,
    llm_config=llm_config
  )

  groupchat = autogen.GroupChat(
    agents=[self_agent, reviewer_agent],
    messages=[],
    max_round=2,
    speaker_selection_method="round_robin",
    allow_repeat_speaker=False,
  )

  manager = autogen.GroupChatManager(groupchat=groupchat, llm_config=llm_config)
  chat_result = self_agent.initiate_chat(
    manager, message=text
  )
  return chat_result.chat_history[-1]['content']
